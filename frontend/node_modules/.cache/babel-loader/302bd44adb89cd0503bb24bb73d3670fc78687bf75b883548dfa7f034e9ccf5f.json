{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: (identifier, password) => api.post('/auth/login', {\n    identifier,\n    password\n  }),\n  register: userData => api.post('/auth/register', userData),\n  logout: () => api.post('/auth/logout'),\n  getProfile: () => api.get('/auth/me'),\n  refreshToken: refreshToken => api.post('/auth/refresh', {\n    refreshToken\n  }),\n  changePassword: (currentPassword, newPassword) => api.put('/auth/password', {\n    currentPassword,\n    newPassword\n  }),\n  forgotPassword: email => api.post('/auth/forgot-password', {\n    email\n  }),\n  resetPassword: (token, password) => api.put('/auth/reset-password', {\n    token,\n    password\n  }),\n  verifyEmail: token => api.get(`/auth/verify-email/${token}`),\n  resendVerification: () => api.post('/auth/resend-verification')\n};\n\n// Users API\nexport const usersAPI = {\n  getUsers: params => api.get('/users', {\n    params\n  }),\n  getUser: id => api.get(`/users/${id}`),\n  createUser: userData => api.post('/users', userData),\n  updateUser: (id, userData) => api.put(`/users/${id}`, userData),\n  deleteUser: id => api.delete(`/users/${id}`),\n  activateUser: id => api.put(`/users/${id}/activate`),\n  searchUsers: params => api.get('/users/search', {\n    params\n  }),\n  getUserStats: () => api.get('/users/stats/overview'),\n  bulkUpdateUsers: (userIds, updates) => api.put('/users/bulk', {\n    user_ids: userIds,\n    updates\n  })\n};\n\n// Jobs API\nexport const jobsAPI = {\n  getJobs: params => api.get('/jobs', {\n    params\n  }),\n  getJob: id => api.get(`/jobs/${id}`),\n  createJob: jobData => api.post('/jobs', jobData),\n  updateJob: (id, jobData) => api.put(`/jobs/${id}`, jobData),\n  deleteJob: id => api.delete(`/jobs/${id}`),\n  getFeaturedJobs: (limit = 5) => api.get(`/jobs/featured/list?limit=${limit}`),\n  searchJobs: params => api.get('/jobs/search', {\n    params\n  }),\n  getJobsByCountry: (country, limit = 10) => api.get(`/jobs/country/${country}?limit=${limit}`),\n  getJobsByCompany: (company, limit = 10) => api.get(`/jobs/company/${company}?limit=${limit}`),\n  getJobStats: () => api.get('/jobs/stats/overview'),\n  getTopPerformingJobs: (limit = 10) => api.get(`/jobs/stats/top-performing?limit=${limit}`),\n  updateJobStatus: (id, status) => api.put(`/jobs/${id}/status`, {\n    status\n  }),\n  featureJob: (id, is_featured) => api.put(`/jobs/${id}/feature`, {\n    is_featured\n  })\n};\n\n// Scholarships API\nexport const scholarshipsAPI = {\n  getScholarships: params => api.get('/scholarships', {\n    params\n  }),\n  getScholarship: id => api.get(`/scholarships/${id}`),\n  getCountries: () => api.get('/scholarships/countries'),\n  getPrograms: country => api.get(`/scholarships/programs/${country}`),\n  createScholarship: scholarshipData => api.post('/scholarships', scholarshipData),\n  updateScholarship: (id, scholarshipData) => api.put(`/scholarships/${id}`, scholarshipData),\n  deleteScholarship: id => api.delete(`/scholarships/${id}`),\n  getFeaturedScholarships: (limit = 5) => api.get(`/scholarships/featured/list?limit=${limit}`),\n  searchScholarships: params => api.get('/scholarships/search', {\n    params\n  }),\n  getScholarshipsByCountry: (country, limit = 10) => api.get(`/scholarships/country/${country}?limit=${limit}`),\n  getScholarshipsByUniversity: (university, limit = 10) => api.get(`/scholarships/university/${university}?limit=${limit}`),\n  getScholarshipsByProgram: (program, limit = 10) => api.get(`/scholarships/program/${program}?limit=${limit}`),\n  getScholarshipStats: () => api.get('/scholarships/stats/overview'),\n  getTopPerformingScholarships: (limit = 10) => api.get(`/scholarships/stats/top-performing?limit=${limit}`),\n  updateScholarshipStatus: (id, status) => api.put(`/scholarships/${id}/status`, {\n    status\n  }),\n  featureScholarship: (id, is_featured) => api.put(`/scholarships/${id}/feature`, {\n    is_featured\n  })\n};\n\n// Applications API\nexport const applicationsAPI = {\n  getApplications: params => api.get('/applications', {\n    params\n  }),\n  getApplication: id => api.get(`/applications/${id}`),\n  createApplication: applicationData => api.post('/applications', applicationData),\n  updateApplication: (id, applicationData) => api.put(`/applications/${id}`, applicationData),\n  submitApplication: ({\n    id,\n    data\n  }) => api.put(`/applications/${id}/submit`, data),\n  restartApplication: id => api.put(`/applications/${id}/restart`),\n  getUserApplications: params => api.get('/applications/my/list', {\n    params\n  }),\n  updateApplicationStatus: (id, status) => api.put(`/applications/${id}/status`, {\n    status\n  }),\n  addReviewNote: (id, note, status = 'Info') => api.post(`/applications/${id}/notes`, {\n    note,\n    status\n  }),\n  getApplicationStats: () => api.get('/applications/stats/overview'),\n  getPendingApplications: (limit = 20) => api.get(`/applications/pending/list?limit=${limit}`)\n};\n\n// Documents API\nexport const documentsAPI = {\n  getDocuments: params => api.get('/documents', {\n    params\n  }),\n  getDocument: id => api.get(`/documents/${id}`),\n  getUserDocuments: params => api.get('/documents/my/list', {\n    params\n  }),\n  uploadDocument: formData => api.post('/documents/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  uploadMultipleDocuments: formData => api.post('/documents/upload-multiple', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  downloadDocument: id => api.get(`/documents/${id}/download`, {\n    responseType: 'blob'\n  }),\n  updateDocument: (id, documentData) => api.put(`/documents/${id}`, documentData),\n  deleteDocument: id => api.delete(`/documents/${id}`),\n  verifyDocument: (id, notes = '') => api.put(`/documents/${id}/verify`, {\n    notes\n  }),\n  unverifyDocument: id => api.put(`/documents/${id}/unverify`),\n  getDocumentStats: () => api.get('/documents/stats/overview')\n};\n\n// Applicants API\nexport const applicantsAPI = {\n  getApplicants: params => api.get('/applicants', {\n    params\n  }),\n  getApplicant: id => api.get(`/applicants/${id}`),\n  getMyProfile: () => api.get('/applicants/profile/me'),\n  createProfile: profileData => api.post('/applicants', profileData),\n  updateProfile: (id, profileData) => api.put(`/applicants/${id}`, profileData),\n  updateMyProfile: profileData => api.put('/applicants/profile/me', profileData),\n  addSkill: (id, skill) => api.post(`/applicants/${id}/skills`, {\n    skill\n  }),\n  removeSkill: (id, skill) => api.delete(`/applicants/${id}/skills/${skill}`),\n  addLanguage: (id, language, proficiency) => api.post(`/applicants/${id}/languages`, {\n    language,\n    proficiency\n  }),\n  removeLanguage: (id, language) => api.delete(`/applicants/${id}/languages/${language}`),\n  getApplicantStats: () => api.get('/applicants/stats/overview')\n};\n\n// Chat API\nexport const chatAPI = {\n  getChats: () => api.get('/chat/conversations'),\n  getConversations: () => api.get('/chat/conversations'),\n  getConversation: (userId, params) => api.get(`/chat/conversation/${userId}`, {\n    params\n  }),\n  getChatMessages: chatId => api.get(`/chat/conversation/${chatId}/messages`),\n  sendMessage: (chatId, messageData) => api.post('/chat/send', {\n    chatId,\n    ...messageData\n  }),\n  markMessageAsRead: messageId => api.put(`/chat/${messageId}/read`),\n  deleteMessage: messageId => api.delete(`/chat/${messageId}`),\n  deleteChat: chatId => api.delete(`/chat/conversation/${chatId}`),\n  getUnreadCount: () => api.get('/chat/unread-count'),\n  searchMessages: params => api.get('/chat/search', {\n    params\n  }),\n  getChatStats: () => api.get('/chat/stats/overview'),\n  getOnlineUsers: () => api.get('/chat/online-users')\n};\n\n// Ads API\nexport const adsAPI = {\n  getAds: params => api.get('/ads', {\n    params\n  }),\n  getAd: id => api.get(`/ads/${id}`),\n  createAd: adData => api.post('/ads', adData),\n  updateAd: (id, adData) => api.put(`/ads/${id}`, adData),\n  deleteAd: id => api.delete(`/ads/${id}`),\n  getFeaturedAds: (limit = 5) => api.get(`/ads/featured/list?limit=${limit}`),\n  getPinnedAds: (limit = 3) => api.get(`/ads/pinned/list?limit=${limit}`),\n  getActiveAds: (limit = 10) => api.get(`/ads/active/list?limit=${limit}`),\n  searchAds: params => api.get('/ads/search', {\n    params\n  }),\n  approveAd: (id, notes = '') => api.put(`/ads/${id}/approve`, {\n    notes\n  }),\n  rejectAd: (id, reason = '') => api.put(`/ads/${id}/reject`, {\n    reason\n  }),\n  publishAd: id => api.put(`/ads/${id}/publish`),\n  unpublishAd: id => api.put(`/ads/${id}/unpublish`),\n  featureAd: (id, is_featured) => api.put(`/ads/${id}/feature`, {\n    is_featured\n  }),\n  pinAd: (id, is_pinned) => api.put(`/ads/${id}/pin`, {\n    is_pinned\n  }),\n  clickAd: id => api.post(`/ads/${id}/click`),\n  getAdStats: () => api.get('/ads/stats/overview'),\n  getTopPerformingAds: (limit = 10) => api.get(`/ads/stats/top-performing?limit=${limit}`)\n};\n\n// File upload utility\nexport const uploadFile = async (file, type = 'document', onProgress) => {\n  const formData = new FormData();\n  formData.append('document', file);\n  formData.append('type', type);\n  return api.post('/documents/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    },\n    onUploadProgress: progressEvent => {\n      if (onProgress) {\n        const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        onProgress(percentCompleted);\n      }\n    }\n  });\n};\n\n// Export default api instance\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","identifier","password","post","register","userData","logout","getProfile","get","refreshToken","changePassword","currentPassword","newPassword","put","forgotPassword","email","resetPassword","verifyEmail","resendVerification","usersAPI","getUsers","params","getUser","id","createUser","updateUser","deleteUser","delete","activateUser","searchUsers","getUserStats","bulkUpdateUsers","userIds","updates","user_ids","jobsAPI","getJobs","getJob","createJob","jobData","updateJob","deleteJob","getFeaturedJobs","limit","searchJobs","getJobsByCountry","country","getJobsByCompany","company","getJobStats","getTopPerformingJobs","updateJobStatus","featureJob","is_featured","scholarshipsAPI","getScholarships","getScholarship","getCountries","getPrograms","createScholarship","scholarshipData","updateScholarship","deleteScholarship","getFeaturedScholarships","searchScholarships","getScholarshipsByCountry","getScholarshipsByUniversity","university","getScholarshipsByProgram","program","getScholarshipStats","getTopPerformingScholarships","updateScholarshipStatus","featureScholarship","applicationsAPI","getApplications","getApplication","createApplication","applicationData","updateApplication","submitApplication","data","restartApplication","getUserApplications","updateApplicationStatus","addReviewNote","note","getApplicationStats","getPendingApplications","documentsAPI","getDocuments","getDocument","getUserDocuments","uploadDocument","formData","uploadMultipleDocuments","downloadDocument","responseType","updateDocument","documentData","deleteDocument","verifyDocument","notes","unverifyDocument","getDocumentStats","applicantsAPI","getApplicants","getApplicant","getMyProfile","createProfile","profileData","updateProfile","updateMyProfile","addSkill","skill","removeSkill","addLanguage","language","proficiency","removeLanguage","getApplicantStats","chatAPI","getChats","getConversations","getConversation","userId","getChatMessages","chatId","sendMessage","messageData","markMessageAsRead","messageId","deleteMessage","deleteChat","getUnreadCount","searchMessages","getChatStats","getOnlineUsers","adsAPI","getAds","getAd","createAd","adData","updateAd","deleteAd","getFeaturedAds","getPinnedAds","getActiveAds","searchAds","approveAd","rejectAd","reason","publishAd","unpublishAd","featureAd","pinAd","is_pinned","clickAd","getAdStats","getTopPerformingAds","uploadFile","file","type","onProgress","FormData","append","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total"],"sources":["/home/alikibret/Project/Adds/Bolt/consultancy_agency/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (identifier, password) => api.post('/auth/login', { identifier, password }),\n  register: (userData) => api.post('/auth/register', userData),\n  logout: () => api.post('/auth/logout'),\n  getProfile: () => api.get('/auth/me'),\n  refreshToken: (refreshToken) => api.post('/auth/refresh', { refreshToken }),\n  changePassword: (currentPassword, newPassword) => api.put('/auth/password', { currentPassword, newPassword }),\n  forgotPassword: (email) => api.post('/auth/forgot-password', { email }),\n  resetPassword: (token, password) => api.put('/auth/reset-password', { token, password }),\n  verifyEmail: (token) => api.get(`/auth/verify-email/${token}`),\n  resendVerification: () => api.post('/auth/resend-verification'),\n};\n\n// Users API\nexport const usersAPI = {\n  getUsers: (params) => api.get('/users', { params }),\n  getUser: (id) => api.get(`/users/${id}`),\n  createUser: (userData) => api.post('/users', userData),\n  updateUser: (id, userData) => api.put(`/users/${id}`, userData),\n  deleteUser: (id) => api.delete(`/users/${id}`),\n  activateUser: (id) => api.put(`/users/${id}/activate`),\n  searchUsers: (params) => api.get('/users/search', { params }),\n  getUserStats: () => api.get('/users/stats/overview'),\n  bulkUpdateUsers: (userIds, updates) => api.put('/users/bulk', { user_ids: userIds, updates }),\n};\n\n// Jobs API\nexport const jobsAPI = {\n  getJobs: (params) => api.get('/jobs', { params }),\n  getJob: (id) => api.get(`/jobs/${id}`),\n  createJob: (jobData) => api.post('/jobs', jobData),\n  updateJob: (id, jobData) => api.put(`/jobs/${id}`, jobData),\n  deleteJob: (id) => api.delete(`/jobs/${id}`),\n  getFeaturedJobs: (limit = 5) => api.get(`/jobs/featured/list?limit=${limit}`),\n  searchJobs: (params) => api.get('/jobs/search', { params }),\n  getJobsByCountry: (country, limit = 10) => api.get(`/jobs/country/${country}?limit=${limit}`),\n  getJobsByCompany: (company, limit = 10) => api.get(`/jobs/company/${company}?limit=${limit}`),\n  getJobStats: () => api.get('/jobs/stats/overview'),\n  getTopPerformingJobs: (limit = 10) => api.get(`/jobs/stats/top-performing?limit=${limit}`),\n  updateJobStatus: (id, status) => api.put(`/jobs/${id}/status`, { status }),\n  featureJob: (id, is_featured) => api.put(`/jobs/${id}/feature`, { is_featured }),\n};\n\n// Scholarships API\nexport const scholarshipsAPI = {\n  getScholarships: (params) => api.get('/scholarships', { params }),\n  getScholarship: (id) => api.get(`/scholarships/${id}`),\n  getCountries: () => api.get('/scholarships/countries'),\n  getPrograms: (country) => api.get(`/scholarships/programs/${country}`),\n  createScholarship: (scholarshipData) => api.post('/scholarships', scholarshipData),\n  updateScholarship: (id, scholarshipData) => api.put(`/scholarships/${id}`, scholarshipData),\n  deleteScholarship: (id) => api.delete(`/scholarships/${id}`),\n  getFeaturedScholarships: (limit = 5) => api.get(`/scholarships/featured/list?limit=${limit}`),\n  searchScholarships: (params) => api.get('/scholarships/search', { params }),\n  getScholarshipsByCountry: (country, limit = 10) => api.get(`/scholarships/country/${country}?limit=${limit}`),\n  getScholarshipsByUniversity: (university, limit = 10) => api.get(`/scholarships/university/${university}?limit=${limit}`),\n  getScholarshipsByProgram: (program, limit = 10) => api.get(`/scholarships/program/${program}?limit=${limit}`),\n  getScholarshipStats: () => api.get('/scholarships/stats/overview'),\n  getTopPerformingScholarships: (limit = 10) => api.get(`/scholarships/stats/top-performing?limit=${limit}`),\n  updateScholarshipStatus: (id, status) => api.put(`/scholarships/${id}/status`, { status }),\n  featureScholarship: (id, is_featured) => api.put(`/scholarships/${id}/feature`, { is_featured }),\n};\n\n// Applications API\nexport const applicationsAPI = {\n  getApplications: (params) => api.get('/applications', { params }),\n  getApplication: (id) => api.get(`/applications/${id}`),\n  createApplication: (applicationData) => api.post('/applications', applicationData),\n  updateApplication: (id, applicationData) => api.put(`/applications/${id}`, applicationData),\n  submitApplication: ({ id, data }) => api.put(`/applications/${id}/submit`, data),\n  restartApplication: (id) => api.put(`/applications/${id}/restart`),\n  getUserApplications: (params) => api.get('/applications/my/list', { params }),\n  updateApplicationStatus: (id, status) => api.put(`/applications/${id}/status`, { status }),\n  addReviewNote: (id, note, status = 'Info') => api.post(`/applications/${id}/notes`, { note, status }),\n  getApplicationStats: () => api.get('/applications/stats/overview'),\n  getPendingApplications: (limit = 20) => api.get(`/applications/pending/list?limit=${limit}`),\n};\n\n// Documents API\nexport const documentsAPI = {\n  getDocuments: (params) => api.get('/documents', { params }),\n  getDocument: (id) => api.get(`/documents/${id}`),\n  getUserDocuments: (params) => api.get('/documents/my/list', { params }),\n  uploadDocument: (formData) => api.post('/documents/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  }),\n  uploadMultipleDocuments: (formData) => api.post('/documents/upload-multiple', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  }),\n  downloadDocument: (id) => api.get(`/documents/${id}/download`, {\n    responseType: 'blob',\n  }),\n  updateDocument: (id, documentData) => api.put(`/documents/${id}`, documentData),\n  deleteDocument: (id) => api.delete(`/documents/${id}`),\n  verifyDocument: (id, notes = '') => api.put(`/documents/${id}/verify`, { notes }),\n  unverifyDocument: (id) => api.put(`/documents/${id}/unverify`),\n  getDocumentStats: () => api.get('/documents/stats/overview'),\n};\n\n// Applicants API\nexport const applicantsAPI = {\n  getApplicants: (params) => api.get('/applicants', { params }),\n  getApplicant: (id) => api.get(`/applicants/${id}`),\n  getMyProfile: () => api.get('/applicants/profile/me'),\n  createProfile: (profileData) => api.post('/applicants', profileData),\n  updateProfile: (id, profileData) => api.put(`/applicants/${id}`, profileData),\n  updateMyProfile: (profileData) => api.put('/applicants/profile/me', profileData),\n  addSkill: (id, skill) => api.post(`/applicants/${id}/skills`, { skill }),\n  removeSkill: (id, skill) => api.delete(`/applicants/${id}/skills/${skill}`),\n  addLanguage: (id, language, proficiency) => api.post(`/applicants/${id}/languages`, { language, proficiency }),\n  removeLanguage: (id, language) => api.delete(`/applicants/${id}/languages/${language}`),\n  getApplicantStats: () => api.get('/applicants/stats/overview'),\n};\n\n// Chat API\nexport const chatAPI = {\n  getChats: () => api.get('/chat/conversations'),\n  getConversations: () => api.get('/chat/conversations'),\n  getConversation: (userId, params) => api.get(`/chat/conversation/${userId}`, { params }),\n  getChatMessages: (chatId) => api.get(`/chat/conversation/${chatId}/messages`),\n  sendMessage: (chatId, messageData) => api.post('/chat/send', { chatId, ...messageData }),\n  markMessageAsRead: (messageId) => api.put(`/chat/${messageId}/read`),\n  deleteMessage: (messageId) => api.delete(`/chat/${messageId}`),\n  deleteChat: (chatId) => api.delete(`/chat/conversation/${chatId}`),\n  getUnreadCount: () => api.get('/chat/unread-count'),\n  searchMessages: (params) => api.get('/chat/search', { params }),\n  getChatStats: () => api.get('/chat/stats/overview'),\n  getOnlineUsers: () => api.get('/chat/online-users'),\n};\n\n// Ads API\nexport const adsAPI = {\n  getAds: (params) => api.get('/ads', { params }),\n  getAd: (id) => api.get(`/ads/${id}`),\n  createAd: (adData) => api.post('/ads', adData),\n  updateAd: (id, adData) => api.put(`/ads/${id}`, adData),\n  deleteAd: (id) => api.delete(`/ads/${id}`),\n  getFeaturedAds: (limit = 5) => api.get(`/ads/featured/list?limit=${limit}`),\n  getPinnedAds: (limit = 3) => api.get(`/ads/pinned/list?limit=${limit}`),\n  getActiveAds: (limit = 10) => api.get(`/ads/active/list?limit=${limit}`),\n  searchAds: (params) => api.get('/ads/search', { params }),\n  approveAd: (id, notes = '') => api.put(`/ads/${id}/approve`, { notes }),\n  rejectAd: (id, reason = '') => api.put(`/ads/${id}/reject`, { reason }),\n  publishAd: (id) => api.put(`/ads/${id}/publish`),\n  unpublishAd: (id) => api.put(`/ads/${id}/unpublish`),\n  featureAd: (id, is_featured) => api.put(`/ads/${id}/feature`, { is_featured }),\n  pinAd: (id, is_pinned) => api.put(`/ads/${id}/pin`, { is_pinned }),\n  clickAd: (id) => api.post(`/ads/${id}/click`),\n  getAdStats: () => api.get('/ads/stats/overview'),\n  getTopPerformingAds: (limit = 10) => api.get(`/ads/stats/top-performing?limit=${limit}`),\n};\n\n// File upload utility\nexport const uploadFile = async (file, type = 'document', onProgress) => {\n  const formData = new FormData();\n  formData.append('document', file);\n  formData.append('type', type);\n  \n  return api.post('/documents/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n    onUploadProgress: (progressEvent) => {\n      if (onProgress) {\n        const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n        onProgress(percentCompleted);\n      }\n    },\n  });\n};\n\n// Export default api instance\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}